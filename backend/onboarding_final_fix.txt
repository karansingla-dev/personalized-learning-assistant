
# REPLACE the complete_onboarding function in app/main.py with this:

@app.post("/api/v1/onboarding/complete")
async def complete_onboarding(
    data: OnboardingRequest,
    db = Depends(get_db)
):
    """Complete user onboarding - WORKING VERSION"""
    try:
        # Simple approach - just create/update user without returning raw MongoDB documents
        user_exists = await db["users"].find_one({"clerk_id": data.clerk_id})
        
        user_data = {
            "clerk_id": data.clerk_id,
            "email": getattr(data, "email", "test@example.com"),
            "username": getattr(data, "username", "testuser"),
            "first_name": getattr(data, "first_name", "Test"),
            "last_name": getattr(data, "last_name", "User"),
            "onboarding": {
                "completed": True,
                "class_level": data.class_level,
                "board": data.board,
                "target_exams": data.target_exams,
                "school_name": data.school_name,
                "city": data.city,
                "state": data.state
            },
            "study_schedule": {
                "school_start": data.school_start,
                "school_end": data.school_end,
                "daily_study_hours": data.daily_study_hours
            },
            "stats": {
                "topics_completed": 0,
                "total_study_hours": 0,
                "average_quiz_score": 0,
                "current_streak": 0,
                "longest_streak": 0,
                "badges_earned": []
            },
            "updated_at": datetime.utcnow()
        }
        
        if not user_exists:
            user_data["created_at"] = datetime.utcnow()
            await db["users"].insert_one(user_data)
        else:
            await db["users"].update_one(
                {"clerk_id": data.clerk_id},
                {"$set": user_data}
            )
        
        # Return simple response without any MongoDB objects
        return {
            "status": "success",
            "redirect": "/dashboard",
            "user": {
                "clerk_id": data.clerk_id,
                "email": user_data["email"],
                "onboarding_completed": True
            }
        }
        
    except Exception as e:
        print(f"Onboarding error: {str(e)}")
        raise HTTPException(status_code=500, detail=str(e))
